# -*- coding: utf-8 -*-
"""streamlit_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PC-eJuFyfU3oLZ1xXmb749b_hQB8vb-z
"""


import streamlit as st
from intent_detection import parse_user_query
from econ_compute import execute_formula
from gemini_module import ask_gemini_explainer


st.set_page_config(page_title="EconoSage Chatbot")
st.title("EconoSage Chatbot ðŸ’¬")

# Initialize chat history in session state
if "history" not in st.session_state:
    st.session_state.history = []

# User input
user_input = st.text_input("You:", key="input", placeholder="Ask me about economics or finance...")

if user_input:
    # Append user message to history
    st.session_state.history.append({"role": "user", "content": user_input})

    # Detect intent and parameters
    formula, params = parse_user_query(user_input)

    if formula:
        try:
            result, formula_str = execute_formula(formula, params)
            # Call Gemini with explanation and history
            bot_response = ask_gemini_explainer(
                user_question=user_input,
                computed_result=str(result),
                formula_used=formula_str,
                history_session=st.session_state.history  # Pass history for context
            )
        except Exception as e:
            bot_response = f"Sorry, I encountered an error while calculating: {str(e)}"
    else:
        # No formula detected, general chat with Gemini
        bot_response = ask_gemini_explainer(
            user_question=user_input,
            history_session=st.session_state.history
        )

    # Append bot response to history
    st.session_state.history.append({"role": "assistant", "content": bot_response})

    # Clear input box
    st.session_state.input = ""

# Display chat messages
for msg in st.session_state.history:
    if msg["role"] == "user":
        st.markdown(f"**You:** {msg['content']}")
    else:
        st.markdown(f"**EconoSage:** {msg['content']}")

